[{"id":7,"regDate":"2021-01-07","updateDate":"2021-01-14","title":"예외처리 try catch","body":"# 예외(Exception)란?\r\n사용자의 잘못된 조작 또는 개발자의 잘못된 코딩으로 인해 발생하는 프로그램 오류. 예외가 발생하면 프로그램이 종료되지만 예외처리를 통해 정상적으로 작동하게 할 수 있다.\r\n\r\n## 예외 종류\r\n- ArithmeticException : 정수를 0으로 나눌경우 발생 \r\n- ArrayIndexOutOfBoundsExcetion : 배열의 범위를 벗어난 index를 접근할 시 발생\r\n- ClassCastExcetion : 변환할 수 없는 타입으로 객체를 반환 시 발생\r\n- NullPointException : 존재하지 않는 레퍼런스를 참조할때 발생\r\n- IllegalArgumentException : 잘못된 인자를 전달 할 때 발생 \r\n- IOException : 입출력 동작 실패 또는 인터럽트 시 발생 \r\n- OutOfMemoryException : 메모리가 부족한 경우 발생\r\n- NumberFormatException : 문자열이 나타내는 숫자와 일치하지 않는 타입의 숫자로 변환시 발생\r\n\r\n# try catch\r\n```java\r\ntry{\r\n\r\n    예외가 발생할 수 있는 코드\r\n\r\n}catch (Exception e){\r\n\r\n    예외시 실행\r\n\r\n}finally{\r\n\r\n    예외발생 여부와 관계없이 실행\r\n} \r\n```\r\n\r\n## 다중 catch \r\n```java\r\ntry{\r\n\r\n} catch (ArrayIndexOutOfBoundsExcetion e){\r\n\r\n} catch (NumberFormatException e){\r\n\r\n}\r\n```\r\n예외종류에 따라 다중 catch를 사용할 수 있다.\r\n\r\n## 예외처리 던지기 throws\r\n```\r\n리턴타입 메소드명(매개변수) throws 예외클래스1, 예외클래스2, ...{\r\n}\r\n\r\n리턴타입 메소드명(매개변수) throws Exception{\r\n}\r\n```\r\nthrows는 메소드 선언부 끝에 작성되어 메소드에서 처리하지 않은 예외를 호출한 곳으로 떠넘기는 역할을 한다. 위처럼 예외클래스를 여러가지 쓸 수도 있고 아래처럼 모든 예외를 한번에 넘길 수도 있다.\r\n메인 메소드에서는 사용하지 않는 것이 좋다.\r\n\r\n### 예시\r\n```java\r\npublic void method1(){\r\n    try {\r\n        method2();\r\n    } catch (ClassCastExcetion) {\r\n        System.out.println(\"클래스가 존재하지 않습니다\");\r\n    }\r\n}\r\n\r\npublic void method2() throws ClassCastExcetion{\r\n    Class cl = Class.forName(\"java.lang.String2\");\r\n}\r\n```\r\n","memberId":1,"boardId":4,"hit":0,"likesCount":0,"replyCount":0,"extra_writer":"엘밍"},{"id":6,"regDate":"2020-12-23","updateDate":"2021-01-14","title":"코드펜 플러그인 테스트","body":"# hover\r\n- hover를 이용하면 마우스를 올렸을 때 색깔이나 크기 등 다양한 요소를 바꿀 수 있다. 예시에서는 색깔이 바뀌도록 만들어보았다.\r\n\r\n```codepen\r\nhttps://codepen.io/lucia6758/embed/RwRXqNN?height=500&theme-id=light&default-tab=html,result\r\n```","memberId":1,"boardId":6,"hit":0,"likesCount":0,"replyCount":0,"extra_writer":"엘밍"},{"id":5,"regDate":"2020-12-22","updateDate":"2021-01-14","title":"데이터 수정 UPDATE","body":"# UPDATE\r\n-데이터 값을 수정할 수 있다.\r\n```sql\r\nUPDATE `테이블명`\r\nSET 칼럼 = '데이터'\r\nWHERE 조건;\r\n```\r\n\r\n## 예시\r\n```sql\r\nUPDATE article\r\nSET title = 'sql정리'\r\nWHERE id = 3;\r\n```","memberId":1,"boardId":5,"hit":10,"likesCount":1,"replyCount":1,"extra_writer":"엘밍"},{"id":4,"regDate":"2020-12-20","updateDate":"2021-01-14","title":"데이터 조회 SELECT(2)","body":"전글에서는 조건문으로 WHERE만 소개했지만 더 많은 조건들을 추가할 수 있다\r\n\r\n# LIKE \r\n```sql\r\nSELECT *\r\nFROM article\r\nWHERE title LIKE 'SQL%';\r\n```\r\n- 이렇게 조회하면 SQL로 시작하는 제목을 가진 데이터들을 조회할 수 있다.\r\n- %는 앞, 뒤 모두에 붙일 수 있다.\r\n\r\n# ORDER BY\r\n```sql\r\nSELECT *\r\nFROM article\r\nORDER BY id DESC;\r\n```\r\n- 이렇게 조회하면 id의 내림차수대로 데이터들이 조회된다.\r\n- DESC는 내림차순, ASC는 오름차순을 나타낸다. (descending, ascending)\r\n- DESC는 describe로 데이터타입을 조회할때도 쓰인다. 줄임말만 같을 뿐 여기서 쓰이는 것과 관련 없음.\r\n\r\n# LIMIT\r\n```sql\r\nSELECT *\r\nFROM article\r\nLIMIT 2;\r\n```\r\n- 조회하고싶은 데이터의 갯수를 정할 수 있다. 예시처럼 LIMIT을 사용하면 데이터가 많아도 2개만 나타난다.\r\n\r\n---\r\n위의 조건들을 한번에 다 사용 할 수도 있다.","memberId":1,"boardId":5,"hit":10,"likesCount":0,"replyCount":0,"extra_writer":"엘밍"},{"id":3,"regDate":"2020-12-20","updateDate":"2021-01-14","title":"데이터 조회 SELECT","body":"# SELECT\r\n- 칼럼명에 *를 넣으면 모든 칼럼을 조회할 수 있다.\r\n```sql\r\nSELECT `칼럼명`\r\nFROM `테이블명`;\r\n```\r\n\r\n# SELECT, WHERE (조건추가)\r\n- 뒤에 WHERE를 붙이면 원하는 조건의 데이터만 조회할 수 있다.\r\n```sql\r\nSELECT `칼럼명`\r\nFROM `테이블명`\r\nWHERE `칼럼` = `데이터`;\r\n```\r\n\r\n# 예시\r\n```sql\r\nSELECT *\r\nFROM article\r\nWHERE id = 1;\r\n```\r\n- 이렇게 쓴다면 id가 1인 row의 모든 칼럼들이 조회된다.","memberId":1,"boardId":5,"hit":0,"likesCount":0,"replyCount":0,"extra_writer":"엘밍"},{"id":2,"regDate":"2020-12-18","updateDate":"2021-01-14","title":"문자열 나누기 split","body":"# split\r\n- split을 사용해 문자열을 나눌 수 있다\r\n```java\r\npublic static void main(String[] args) {\r\n    String 동물들 = \"개,고양이,소,말,돼지\";\r\n    String[] 동물 = 동물들.split(\",\");\r\n    for(int i = 0; i < 동물.length; i++){\r\n    System.out.println(동물[i]);\r\n    }\r\n}\r\n```\r\n- 결과\r\n```\r\n개\r\n고양이\r\n소\r\n말\r\n돼지\r\n```\r\n\r\n","memberId":1,"boardId":4,"hit":0,"likesCount":0,"replyCount":0,"extra_writer":"엘밍"},{"id":1,"regDate":"2020-12-18","updateDate":"2021-01-14","title":"데이터베이스,테이블,row 추가","body":"# DB생성\r\n```sql\r\nCREATE DATABASE `DB이름`;\r\n```\r\n\r\n# table 생성\r\n```sql\r\nCREATE TABLE `테이블명` (\r\n `칼럼` 타입 조건,\r\n `칼럼2` 타입 조건,\r\n);\r\n```\r\n\r\n# row 생성\r\n```sql\r\nINSERT INTO `테이블명`\r\nSET `칼럼1` = 'data',\r\n`칼럼2` = 'data';\r\n```\r\n```sql\r\nINSERT INTO `테이블명` (`칼럼1`,`칼럼2)\r\nVALUES ('data','data');\r\n```\r\n\r\n# 예시\r\n```sql\r\nCREATE DATABASE textBoard;\r\nUSE textBoard;\r\n\r\nCREATE TABLE article (\r\n    id INT(10) UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,\r\n    regDate DATETIME NOT NULL,\r\n    title CHAR(200) NOT NULL,\r\n    `body` TEXT NOT NULL,\r\n    memberId INT(10) UNSIGNED NOT NULL, \r\n);\r\n\r\nINSERT INTO article\r\nSET regDate = NOW(),\r\ntitle = '제목1',\r\n`body` = '내용1',\r\nmemberId = 1;\r\n```","memberId":1,"boardId":5,"hit":8,"likesCount":0,"replyCount":0,"extra_writer":"엘밍"}]